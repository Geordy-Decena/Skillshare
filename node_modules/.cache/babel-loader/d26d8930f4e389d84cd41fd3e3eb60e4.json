{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yi Li Ng\\\\Documents\\\\Githubtype\\\\src\\\\components\\\\results.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport '../css/results.css';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nfunction Results() {\n  const [isName, setName] = useState({\n    match: \"\"\n  });\n  const [isRating, setRating] = useState({\n    rating: \"\"\n  });\n\n  function onChangeRating(e) {\n    setRating({ ...isRating,\n      rating: e.target.value\n    });\n  }\n\n  function submitRate(e) {\n    const response = fetch('/userRatings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(isRating)\n    });\n\n    if (response.ok) {\n      console.log(\"pass ratings worked\");\n    }\n\n    console.log(isRating);\n  }\n\n  function change(data) {\n    const data2 = JSON.parse(data);\n    setName({\n      user: data\n    });\n  }\n\n  useEffect(() => {\n    fetch('/userName').then(res => res.text()).then(data => change(data));\n  }, []); //split this string in half? these two names here\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"results-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"active-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"show active user\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"How would you rate \", isName.text, \" skills?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contain-input\",\n    onChange: e => onChangeRating(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit\",\n    onClick: () => submitRate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/connection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"connect-more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, \"Connect more\")))));\n}\n\nexport default Results;","map":{"version":3,"sources":["C:/Users/Yi Li Ng/Documents/Githubtype/src/components/results.js"],"names":["React","useState","useEffect","Fragment","BrowserRouter","Router","Route","Switch","Link","Results","isName","setName","match","isRating","setRating","rating","onChangeRating","e","target","value","submitRate","response","fetch","method","headers","body","JSON","stringify","ok","console","log","change","data","data2","parse","user","then","res","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\r\nimport '../css/results.css';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\n\r\nfunction Results() {\r\n\r\n    const [isName, setName] = useState(\r\n        {match: \"\"}\r\n    );\r\n\r\n    const [isRating, setRating] = useState({\r\n        rating: \"\",\r\n    });\r\n\r\n    function onChangeRating(e) {\r\n        setRating({ ...isRating, rating: e.target.value })\r\n    }\r\n\r\n    function submitRate(e) {\r\n        const response = fetch('/userRatings', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(isRating)\r\n        })\r\n        if (response.ok) {\r\n            console.log(\"pass ratings worked\")\r\n        }\r\n        console.log(isRating);\r\n    }\r\n\r\n    function change(data){\r\n        const data2 = JSON.parse(data);\r\n        setName({user: data})\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch('/userName')\r\n            .then(res => res.text()).then(data => change(data));\r\n    }, [])\r\n    //split this string in half? these two names here\r\n\r\n    return (\r\n        <Fragment >\r\n            <div className='results-page'>\r\n\r\n                <div className='active-user'>show active user</div>\r\n                <div className='title'>\r\n                    How would you rate {isName.text} skills?\r\n                </div>\r\n\r\n                <div className='contain-input' onChange={(e) => onChangeRating(e)}>\r\n                    <input type=\"text\" ></input>\r\n                </div>\r\n\r\n                <div className=\"submit\" onClick={() => submitRate()}>Submit</div>\r\n\r\n                <Link to=\"/connection\">\r\n                    <div className='connect-more'>\r\n                        <h1>Connect more</h1>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Results;"]},"metadata":{},"sourceType":"module"}