{"ast":null,"code":"var _jsxFileName = \"/Volumes/Fusion SSD/Code (Fusion)/Work/ShareSkill/src/components/connection.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport '../css/connection.css';\nimport LearnList from './learnList';\nimport TeachList from './teachList';\nimport Match from './match';\nimport book from '../imgs/book.png';\nimport loading from '../imgs/loading.png';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { Transition } from 'react-transition-group';\n\nfunction Connection(props) {\n  const [isLearn, setLearn] = useState(false);\n  const [isTeach, setTeach] = useState(false);\n  const [isSkill, setSkill] = useState({\n    skill: \"\"\n  });\n  const [isMatch, setMatch] = useState({\n    match: false\n  });\n  const [isInfo, setInfo] = useState({\n    userInfo: \"\",\n    userSkillLearn: \"\",\n    userSkillTeach: \"\",\n    matchedUserInfo: \"\",\n    matchedUserSkillLearn: \"\",\n    matchedUserSkillTeach: \"\"\n  });\n\n  function matchPage() {\n    setMatch({\n      match: true\n    });\n    const response = fetch('/computeMatch', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(isSkill)\n    }).then(res => res.text()).then(data => {\n      setInfoFunc(data);\n      console.log(data);\n    });\n\n    if (response.ok) {\n      console.log(\"it worked\");\n    }\n  }\n\n  function setInfoFunc(data) {\n    var data2 = JSON.parse(data);\n    setInfo({\n      userInfo: data2.user,\n      userSkillLearn: isSkill,\n      userSkillTeach: data2.matchedUserSkill,\n      matchedUserInfo: data2.matchedUser,\n      matchedUserSkillLearn: isSkill,\n      matchedUserSkillTeach: data2.matchedUserSkill\n    });\n  }\n\n  function setChange(data) {\n    setSkill({\n      skill: data\n    });\n    console.log(isSkill); //props.bringLearnSkill(isSkill.data)\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, isMatch.match == true && /*#__PURE__*/React.createElement(Transition, {\n    timeout: 3000,\n    in: true,\n    appear: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, status => /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `loadingDiv loadingDiv-${status}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `loading loading-${status}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }))))), isMatch.match == false && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"connection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, isTeach == false && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"learnComp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(LearnList, {\n    handleClick: () => {\n      setLearn(!isLearn);\n    },\n    decideLearn: data => setChange(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  })), isLearn == false && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"teachComp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TeachList, {\n    handleClick: () => {\n      setTeach(!isTeach);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }))), isLearn == false && isTeach == false && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"connectBtn\",\n    onClick: () => matchPage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, \"Connect!\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: book,\n    className: \"bookConnection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }))), isMatch.match == true && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Match, {\n    skill: isSkill.skill,\n    userInfo: data2.user,\n    userSkillLearn: isSkill,\n    userSkillTeach: data2.matchedUserSkil,\n    matchedUserInfo: data2.matchedUser,\n    matchedUserSkillLearn: isSkill,\n    matchedUserSkillTeach: data2.matchedUserSkill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  })));\n}\n\nexport default Connection;","map":{"version":3,"sources":["/Volumes/Fusion SSD/Code (Fusion)/Work/ShareSkill/src/components/connection.js"],"names":["React","useState","useEffect","Fragment","LearnList","TeachList","Match","book","loading","BrowserRouter","Router","Route","Switch","Link","Transition","Connection","props","isLearn","setLearn","isTeach","setTeach","isSkill","setSkill","skill","isMatch","setMatch","match","isInfo","setInfo","userInfo","userSkillLearn","userSkillTeach","matchedUserInfo","matchedUserSkillLearn","matchedUserSkillTeach","matchPage","response","fetch","method","headers","body","JSON","stringify","then","res","text","data","setInfoFunc","console","log","ok","data2","parse","user","matchedUserSkill","matchedUser","setChange","status","matchedUserSkil"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport '../css/connection.css';\nimport LearnList from './learnList'\nimport TeachList from './teachList'\nimport Match from './match'\nimport book from '../imgs/book.png'\nimport loading from '../imgs/loading.png'\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { Transition } from 'react-transition-group'\n\n\nfunction Connection(props) {\n\n    const [isLearn, setLearn] = useState(false)\n    const [isTeach, setTeach] = useState(false)\n\n    const [isSkill, setSkill] = useState({ skill: \"\" })\n    const [isMatch, setMatch] = useState({ match: false })\n\n    const [isInfo, setInfo] = useState({\n        userInfo: \"\",\n        userSkillLearn: \"\",\n        userSkillTeach: \"\",\n        matchedUserInfo: \"\",\n        matchedUserSkillLearn: \"\",\n        matchedUserSkillTeach: \"\",\n    })\n\n    function matchPage() {\n        setMatch({ match: true })\n        const response = fetch('/computeMatch', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(isSkill)\n        }).then(res => res.text()).then(data => { setInfoFunc(data); console.log(data) })\n        if (response.ok) {\n            console.log(\"it worked\")\n        }\n    }\n\n    function setInfoFunc(data) {\n        var data2 = JSON.parse(data)\n        setInfo({ userInfo: data2.user, userSkillLearn: isSkill, userSkillTeach: data2.matchedUserSkill, matchedUserInfo: data2.matchedUser, matchedUserSkillLearn: isSkill, matchedUserSkillTeach: data2.matchedUserSkill })\n    }\n\n    function setChange(data) {\n        setSkill({ skill: data })\n        console.log(isSkill)\n        //props.bringLearnSkill(isSkill.data)\n    }\n\n    return (\n        <Fragment>\n            {isMatch.match == true && (\n                <Transition\n                    timeout={3000}\n                    in={true}\n                    appear\n                >{(status) => (\n                    <Fragment>\n                        <div className={`loadingDiv loadingDiv-${status}`}>\n                            <div className={`loading loading-${status}`}>\n                                <img src={loading}></img>\n                            </div>\n                        </div>\n                    </Fragment>\n                )}\n                </Transition>\n            )}\n            {(isMatch.match == false) && (\n                <Fragment>\n                    <div className=\"connection\">\n                        {isTeach == false && (\n                            <div className=\"learnComp\">\n                                <LearnList handleClick={() => { setLearn(!isLearn) }} decideLearn={(data) => setChange(data)} />\n                            </div>\n                        )}\n                        {isLearn == false && (\n                            <div className=\"teachComp\">\n                                <TeachList handleClick={() => { setTeach(!isTeach) }} />\n                            </div>\n                        )}\n                    </div>\n                    {(isLearn == false && isTeach == false) && (\n                        <div className=\"connectBtn\" onClick={() => matchPage()}>\n                            <h1>Connect!</h1>\n                            <img src={book} className=\"bookConnection\"></img>\n                        </div>\n                    )}\n                </Fragment>\n            )}\n            {isMatch.match == true && (\n                <Fragment>\n                    <Match skill={isSkill.skill} userInfo={data2.user} userSkillLearn={isSkill} userSkillTeach={data2.matchedUserSkil} matchedUserInfo={data2.matchedUser} matchedUserSkillLearn={isSkill} matchedUserSkillTeach={data2.matchedUserSkill} />\n                </Fragment>\n            )}\n        </Fragment>\n    );\n}\n\nexport default Connection;"]},"metadata":{},"sourceType":"module"}