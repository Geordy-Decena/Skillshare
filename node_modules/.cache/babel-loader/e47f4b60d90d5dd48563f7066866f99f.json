{"ast":null,"code":"var _jsxFileName = \"/Volumes/Fusion SSD/Code (Fusion)/Work/ShareSkill/src/components/learnList.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport '../css/learnList.css';\nimport book from '../imgs/book.png';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nfunction LearnList(props) {\n  const [isUserList, setUserList] = useState({\n    list: [],\n    rate: []\n  });\n  const [isList, setList] = useState({\n    active: false,\n    list: [\"Advanced Functions\", \"Calculus\", \"Linear Systems\", \"Geography\", \"History\", \"Chemistry\", \"Physics\", \"Biology\", \"Python\", \"JavaScript\", \"C++\", \"MySQL\", \"NoSQL\", \"Machine Learning\", \"Artificial Intelligence\", \"OOP\", \"React\", \"Angular\", \"HTML\", \"CSS\", \"MATLAB\", \"EXCEL\"]\n  });\n  const [isNewSkill, setNewSkill] = useState({\n    skill: \"\",\n    level: \"\"\n  });\n  useEffect(() => {\n    fetch('/sendLearnData').then(res => res.text()).then(data => prepareData(data));\n  }, []);\n\n  function prepareData(data) {\n    var data2 = JSON.parse(data);\n    setUserList({ ...isUserList,\n      list: data2.skills,\n      rate: data2.levels\n    });\n  }\n\n  function submitSkill() {\n    if (isNewSkill.skill != \"\") {\n      listActivate();\n      console.log(isNewSkill);\n      var query = [`${isNewSkill.skill}`];\n      var query2 = [`${isNewSkill.level}`];\n      setUserList({ ...isUserList,\n        list: isUserList.list.concat(query),\n        rate: isUserList.rate.concat(query2)\n      });\n      console.log(isUserList);\n    } else {\n      setNewSkill({\n        skill: \"\",\n        level: 1\n      });\n    }\n\n    const response = fetch('/userDataLearn', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(isNewSkill)\n    }).then(res => res.text()).then(data => console.log(data));\n\n    if (response.ok) {\n      console.log(\"it worked\");\n    }\n  }\n\n  function listActivate() {\n    props.handleClick();\n    setList({ ...isList,\n      active: !isList.active\n    });\n  }\n\n  function selectRadioButton(e) {\n    setNewSkill({ ...isNewSkill,\n      skill: e.target.value\n    });\n    console.log(isNewSkill.skill);\n  }\n\n  function onChangeValue(e) {\n    setNewSkill({ ...isNewSkill,\n      level: e.target.value\n    });\n    console.log(isNewSkill.level);\n  }\n\n  function selectRadioButtonLearn(e) {\n    props.decideLearn(e.target.value);\n    console.log(e.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"learnList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"learnH1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"What I want to learn\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skillTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Skill\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"Rating\")), isUserList.list.map(skill => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"skillLearn\",\n      onChange: e => selectRadioButtonLearn(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }\n    }, skill), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: skill,\n      name: \"skill\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rateLearnDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, isUserList.rate.map(rate => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rateLearn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, rate));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addSkillBtn\",\n    onClick: () => listActivate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Add Skill\")), isList.active == true && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listOfSkillsDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listOfSkills\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, isList.list.map(skill => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"availableSkills\",\n      onChange: e => selectRadioButton(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }\n    }, skill), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: skill,\n      name: \"skill\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 41\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"exit\",\n    onClick: () => listActivate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }, \"x\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputSkillDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, \"Set Skill Level\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"inputSkill\",\n    type: \"number\",\n    max: \"10\",\n    min: \"1\",\n    onChange: e => onChangeValue(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addSkill\",\n    onClick: () => submitSkill(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, \"Add Skill\")))));\n}\n\nexport default LearnList;","map":{"version":3,"sources":["/Volumes/Fusion SSD/Code (Fusion)/Work/ShareSkill/src/components/learnList.js"],"names":["React","useState","useEffect","Fragment","book","BrowserRouter","Router","Route","Switch","Link","LearnList","props","isUserList","setUserList","list","rate","isList","setList","active","isNewSkill","setNewSkill","skill","level","fetch","then","res","text","data","prepareData","data2","JSON","parse","skills","levels","submitSkill","listActivate","console","log","query","query2","concat","response","method","headers","body","stringify","ok","handleClick","selectRadioButton","e","target","value","onChangeValue","selectRadioButtonLearn","decideLearn","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport '../css/learnList.css';\nimport book from '../imgs/book.png'\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nfunction LearnList(props) {\n\n    const [isUserList, setUserList] = useState({\n        list: [],\n        rate: []\n    })\n\n    const [isList, setList] = useState({\n        active: false,\n        list: [\"Advanced Functions\", \"Calculus\", \"Linear Systems\", \"Geography\", \"History\", \"Chemistry\", \"Physics\", \"Biology\", \"Python\", \"JavaScript\", \"C++\", \"MySQL\", \"NoSQL\", \"Machine Learning\", \"Artificial Intelligence\", \"OOP\", \"React\", \"Angular\", \"HTML\", \"CSS\", \"MATLAB\", \"EXCEL\"]\n    })\n\n    const [isNewSkill, setNewSkill] = useState({\n        skill: \"\",\n        level: \"\",\n    })\n\n    useEffect(() => {\n        fetch('/sendLearnData').then(\n            res => res.text()\n        ).then(data => prepareData(data));\n    }, [])\n\n    function prepareData(data) {\n        var data2 = JSON.parse(data)\n        setUserList({ ...isUserList, list: data2.skills, rate: data2.levels })\n    }\n\n    function submitSkill() {\n        if (isNewSkill.skill != \"\") {\n            listActivate()\n            console.log(isNewSkill)\n            var query = [`${isNewSkill.skill}`]\n            var query2 = [`${isNewSkill.level}`]\n            setUserList({ ...isUserList, list: isUserList.list.concat(query), rate: isUserList.rate.concat(query2) })\n            console.log(isUserList)\n        }\n        else {\n            setNewSkill({\n                skill: \"\",\n                level: 1\n            })\n        }\n        const response = fetch('/userDataLearn', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(isNewSkill)\n        }).then(res => res.text()).then(data => console.log(data))\n        if (response.ok) {\n            console.log(\"it worked\")\n        }\n    }\n\n\n\n    function listActivate() {\n        props.handleClick()\n        setList({ ...isList, active: !isList.active })\n    }\n\n    function selectRadioButton(e) {\n        setNewSkill({ ...isNewSkill, skill: e.target.value })\n        console.log(isNewSkill.skill)\n    }\n\n    function onChangeValue(e) {\n        setNewSkill({ ...isNewSkill, level: e.target.value })\n        console.log(isNewSkill.level)\n    }\n\n    function selectRadioButtonLearn(e) {\n        props.decideLearn(e.target.value)\n        console.log(e.target.value)\n    }\n\n\n    return (\n        <Fragment>\n            <div className=\"learnList\">\n                <h1 className=\"learnH1\">What I want to learn</h1>\n                <div className=\"skillTitle\">\n                    <h1>Skill</h1>\n                    <h2>Rating</h2>\n                </div>\n                {isUserList.list.map((skill) => {\n                    return (\n                        <div className=\"skillLearn\" onChange={(e) => selectRadioButtonLearn(e)}>\n                            <h1>{skill}</h1>\n                            <input type=\"radio\" value={skill} name=\"skill\" />\n                        </div>\n                    )\n                })}\n                <div className=\"rateLearnDiv\">\n                    {isUserList.rate.map((rate) => {\n                        return (\n                            <div className=\"rateLearn\">\n                                <h1>{rate}</h1>\n                            </div>\n                        )\n                    })}\n                </div>\n                <div className=\"addSkillBtn\" onClick={() => listActivate()}>Add Skill</div>\n            </div>\n            {(isList.active == true) && (\n                <Fragment>\n                    <div className=\"listOfSkillsDiv\">\n                        <div className=\"listOfSkills\">\n                            {isList.list.map((skill) => {\n                                return (\n                                    <div className=\"availableSkills\" onChange={(e) => selectRadioButton(e)}>\n                                        <h1>{skill}\n                                        </h1>\n                                        <input type=\"radio\" value={skill} name=\"skill\" />\n                                    </div>\n                                )\n                            })}\n                            <div className=\"exit\" onClick={() => listActivate()}>x</div>\n                            <div className=\"inputSkillDiv\">\n                                <h1>Set Skill Level</h1>\n                                <input className=\"inputSkill\" type=\"number\" max=\"10\" min=\"1\" onChange={(e) => onChangeValue(e)}></input>\n                            </div>\n                            <div className=\"addSkill\" onClick={() => submitSkill()}>Add Skill</div>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment >\n    );\n}\n\nexport default LearnList;"]},"metadata":{},"sourceType":"module"}