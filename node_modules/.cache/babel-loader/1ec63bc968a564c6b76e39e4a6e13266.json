{"ast":null,"code":"var _jsxFileName = \"/Volumes/Fusion SSD/Code (Fusion)/Work/ShareSkill/src/components/connection.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport '../css/connection.css';\nimport LearnList from './learnList';\nimport TeachList from './teachList';\nimport Match from './match';\nimport book from '../imgs/book.png';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nfunction Connection(props) {\n  const [isLearn, setLearn] = useState(false);\n  const [isTeach, setTeach] = useState(false);\n  const [isSkill, setSkill] = useState({\n    skill: \"\"\n  });\n  const [isMatch, setMatch] = useState({\n    match: false\n  });\n\n  function matchPage() {\n    setMatch({\n      match: true\n    });\n  }\n\n  function setChange(data) {\n    setSkill({\n      skill: data\n    });\n    console.log(isSkill); //props.bringLearnSkill(isSkill.data)\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, isMatch == false && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"connection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, isTeach == false && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"learnComp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(LearnList, {\n    handleClick: () => {\n      setLearn(!isLearn);\n    },\n    decideLearn: data => setChange(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  })), isLearn == false && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"teachComp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TeachList, {\n    handleClick: () => {\n      setTeach(!isTeach);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }))), isLearn == false && isTeach == false && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"connectBtn\",\n    onClick: () => matchPage(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, \"Connect!\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: book,\n    className: \"bookConnection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }))), isMatch == true && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Match, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  })));\n}\n\nexport default Connection;","map":{"version":3,"sources":["/Volumes/Fusion SSD/Code (Fusion)/Work/ShareSkill/src/components/connection.js"],"names":["React","useState","useEffect","Fragment","LearnList","TeachList","Match","book","BrowserRouter","Router","Route","Switch","Link","Connection","props","isLearn","setLearn","isTeach","setTeach","isSkill","setSkill","skill","isMatch","setMatch","match","matchPage","setChange","data","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport '../css/connection.css';\nimport LearnList from './learnList'\nimport TeachList from './teachList'\nimport Match from './match'\nimport book from '../imgs/book.png'\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nfunction Connection(props) {\n\n    const [isLearn, setLearn] = useState(false)\n    const [isTeach, setTeach] = useState(false)\n\n    const [isSkill, setSkill] = useState({ skill: \"\" })\n    const [isMatch, setMatch] = useState({ match: false })\n\n    function matchPage() {\n        setMatch({ match: true })\n    }\n\n    function setChange(data) {\n        setSkill({ skill: data })\n        console.log(isSkill)\n        //props.bringLearnSkill(isSkill.data)\n    }\n\n    return (\n        <Fragment>\n            {(isMatch == false) && (\n                <Fragment>\n                    <div className=\"connection\">\n                        {isTeach == false && (\n                            <div className=\"learnComp\">\n                                <LearnList handleClick={() => { setLearn(!isLearn) }} decideLearn={(data) => setChange(data)} />\n                            </div>\n                        )}\n                        {isLearn == false && (\n                            <div className=\"teachComp\">\n                                <TeachList handleClick={() => { setTeach(!isTeach) }} />\n                            </div>\n                        )}\n                    </div>\n                    {(isLearn == false && isTeach == false) && (\n                        <div className=\"connectBtn\" onClick={() => matchPage()}>\n                            <h1>Connect!</h1>\n                            <img src={book} className=\"bookConnection\"></img>\n                        </div>\n                    )}\n                </Fragment>\n            )}\n            {isMatch == true && (\n                <Fragment>\n                    <Match />\n                </Fragment>\n            )}\n        </Fragment>\n    );\n}\n\nexport default Connection;"]},"metadata":{},"sourceType":"module"}