{"ast":null,"code":"var _jsxFileName = \"/Volumes/Fusion SSD/Code (Fusion)/Work/ShareSkill/src/components/results.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\nimport '../css/results.css';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nfunction Results() {\n  const [isName, setName] = useState({\n    user: \"\",\n    macth: \"\"\n  });\n  const [isRating, setRating] = useState({\n    rating: \"\",\n    skill: \"\"\n  });\n\n  function onChangeRating(e) {\n    setRating({ ...isRating,\n      rating: e.target.value\n    });\n  }\n\n  function submitRate(e) {\n    const response = fetch('/userRatings', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify(isRating)\n    });\n\n    if (response.ok) {\n      console.log(\"pass ratings worked\");\n    }\n\n    console.log(isRating);\n  }\n\n  function handleName(data) {\n    var data2 = JSON.parse(data);\n    setName({ ...isName,\n      user: data2.name\n    });\n  }\n\n  useEffect(() => {\n    fetch('/userName').then(res => res.text()).then(data => handleName(data));\n  }, []); //split this string in half? these two names here\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"results-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"active-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"show active user\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"How would you rate - skills?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contain-input\",\n    onChange: e => onChangeRating(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit\",\n    onClick: () => submitRate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/connection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"connect-more\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Connect more\")))));\n}\n\nexport default Results;","map":{"version":3,"sources":["/Volumes/Fusion SSD/Code (Fusion)/Work/ShareSkill/src/components/results.js"],"names":["React","useState","useEffect","Fragment","BrowserRouter","Router","Route","Switch","Link","Results","isName","setName","user","macth","isRating","setRating","rating","skill","onChangeRating","e","target","value","submitRate","response","fetch","method","headers","body","JSON","stringify","ok","console","log","handleName","data","data2","parse","name","then","res","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport '../css/results.css';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n\nfunction Results() {\n\n    const [isName, setName] = useState(\n        {\n            user: \"\",\n            macth: \"\"\n        });\n\n    const [isRating, setRating] = useState({\n        rating: \"\",\n        skill: \"\"\n    });\n\n    function onChangeRating(e) {\n        setRating({ ...isRating, rating: e.target.value })\n    }\n\n    function submitRate(e) {\n        const response = fetch('/userRatings', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify(isRating)\n        })\n        if (response.ok) {\n            console.log(\"pass ratings worked\")\n        }\n        console.log(isRating);\n    }\n\n    function handleName(data) {\n        var data2 = JSON.parse(data)\n        setName({ ...isName, user: data2.name })\n    }\n\n    useEffect(() => {\n        fetch('/userName').then(\n            res => res.text()\n        ).then(data => handleName(data));\n    }, [])\n    //split this string in half? these two names here\n\n\n    return (\n        <Fragment >\n            <div className='results-page'>\n\n                <div className='active-user'>show active user</div>\n                <div className='title'>\n                    How would you rate - skills?\n                </div>\n\n                <div className='contain-input' onChange={(e) => onChangeRating(e)}>\n                    <input type=\"text\" ></input>\n                </div>\n\n                <div className=\"submit\" onClick={() => submitRate()}>\n                    <h1>Submit</h1>\n                </div>\n\n                <Link to=\"/connection\">\n                    <div className='connect-more'>\n                        <h1>Connect more</h1>\n                    </div>\n                </Link>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}